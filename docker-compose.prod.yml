version: "3.8"

services:
  mito-api:
    image: mito:latest
    container_name: mito-api
    build:
      context: .
      dockerfile: api/Dockerfile
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-mysql://$MYSQL_USER:$MYSQL_PASSWORD@mysql:$MYSQL_PORT/$MYSQL_DATABASE}
    volumes:
      - ./data/django/staticfiles:/staticfiles
    networks:
      - mito_network
    depends_on:
      - mysql
    command: gunicorn
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mito-worker:
    image: mito:latest
    container_name: mito-worker
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-mysql://$MYSQL_USER:$MYSQL_PASSWORD@mysql:$MYSQL_PORT/$MYSQL_DATABASE}
    networks:
      - mito_network
    depends_on:
      mito-api:
        condition: service_healthy
      mysql:
        condition: service_started
    command: celery

  mito-scheduler:
    image: mito:latest
    container_name: mito-scheduler
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-mysql://$MYSQL_USER:$MYSQL_PASSWORD@mysql:$MYSQL_PORT/$MYSQL_DATABASE}
    networks:
      - mito_network
    depends_on:
      mito-api:
        condition: service_healthy
      mysql:
        condition: service_started
    command: celery-beat

  nginx:
    image: nginx:latest
    container_name: mito-nginx
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./data/django/staticfiles:/staticfiles:ro
    ports:
      - "80:80"
      - "81:81"
    networks:
      - mito_network
    depends_on:
      - mito-api
      - flower

  mysql:
    image: mariadb:11.6
    container_name: mito-mariadb
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_HOST: ${MYSQL_HOST:-mysql}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
    volumes:
      - ./docker/mysql/etc/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./data/mysql/data:/var/lib/mysql
      - ./data/mysql/logs:/var/log/mysql
    networks:
      - mito_network
    restart: always

  redis:
    image: redis:latest
    container_name: mito-redis
    restart: always
    command: redis-server
    volumes:
      - ./data/redis:/data
    networks:
      - mito_network

  flower:
    image: mito:latest
    container_name: mito-flower
    env_file:
      - ./.env
    depends_on:
      - redis
    networks:
      - mito_network
    command: flower

networks:
  mito_network:
    driver: bridge
